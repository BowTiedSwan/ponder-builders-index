# Multi-stage Dockerfile optimized for DigitalOcean App Platform
# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /workspace

# Install pnpm
RUN npm install -g pnpm@8

# Copy package files for dependency installation
COPY package*.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/shared-abis/package.json ./packages/shared-abis/
COPY packages/shared-types/package.json ./packages/shared-types/
COPY apps/ponder-builders/package.json ./apps/ponder-builders/

# Install dependencies
RUN pnpm install --frozen-lockfile --production=false

# Copy source code
COPY packages/ ./packages/
COPY apps/ponder-builders/ ./apps/ponder-builders/

# Build shared packages first
RUN pnpm --filter @morpheusai/shared-abis build
RUN pnpm --filter @morpheusai/shared-types build

# Build the ponder-builders app
RUN pnpm --filter @morpheusai/ponder-builders build

# Production stage
FROM node:18-alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user
RUN addgroup -g 1001 -S ponder && \
    adduser -S ponder -u 1001

# Set working directory
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm@8

# Copy package files
COPY package*.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/shared-abis/package.json ./packages/shared-abis/
COPY packages/shared-types/package.json ./packages/shared-types/
COPY apps/ponder-builders/package.json ./apps/ponder-builders/

# Install production dependencies only
RUN pnpm install --frozen-lockfile --production=true

# Copy built application
COPY --from=builder --chown=ponder:ponder /workspace/packages/ ./packages/
COPY --from=builder --chown=ponder:ponder /workspace/apps/ponder-builders/dist ./apps/ponder-builders/dist
COPY --from=builder --chown=ponder:ponder /workspace/apps/ponder-builders/ponder.* ./apps/ponder-builders/
COPY --from=builder --chown=ponder:ponder /workspace/apps/ponder-builders/src ./apps/ponder-builders/src

# Set ownership
RUN chown -R ponder:ponder /app

# Switch to non-root user
USER ponder

# Expose port
EXPOSE 42069

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD node -e "require('http').get('http://localhost:42069/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

# Set working directory to the app
WORKDIR /app/apps/ponder-builders

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["pnpm", "start"]
